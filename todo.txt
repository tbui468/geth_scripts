************************Read************************
Messari BlockChain report - business side of things
Reread Mastering Bitcoin - technical details/foundation
Reread Mastering Ethereum - technical details/foundation
Vitalik Buterin blog

Note: Mining can be used for private networks, but mainnet
    requires a consensus client since ethereum switch to proof-of-stake
    Geth and a consensus client (such as Prysm, a Go POS implementation) and maintain ethereum blockchain
    Back in the day only an execution client was necessary, but the switch now requires a different consensus mechanism
    Consider running Prysm alongside Geth for the private network

**********************Foundations*****************************
Attempt at building mini-cryptocurrency in python
    try using hash functions/dsa from eth_utils so that we can skip the geth signers
Watch video on building a mini-cryptocurrency in Ruby
Fix mini-cryptocurrency based on video, and write up tutorial
    use async/await if necessary for node connections
    Write up post on Notion (or other platform)
Ethereum in 25 minutes video
Mastering Ethereum Book
Build a mini-ethereum blockchain/virtual machine in python
Remake mini-ethereum to use proof-of-stake
Write up mini-ethereum in Notion

***********************Structured Smart Contract Courses********************************
CryptoZombies
    pw: catdoglion
    basic smart contracts
Ethernauts
    security

***********************Proof-of-Stake*********************************
Make a new Prysm project
Make a geth executaion node
Make a prysm beacon node
Make a validator

**************************Ballot Contract*******************************
Node5 jsonrpc js console doesn't work for some reason
Test with Metamask

Simple Auction
Blind Auction
Safe Remote Purchase
Simple Payment Channel
Prysm for proof-of-stake

***********************Ideas****************************
Basic Exchange
    Order books that can record asks/bids and the account
    Limit orders
    Contract deployer gets a small cut

KickStarter DAO
    Send money to account
    if amount reach, project is funded
    else if time limit reached without full funding, sent money is refunded
    Would still need a third-party to settle disputes (eg, project spent all money without delivering promise)

Staking-as-a-Service DAO
    Stakers send ether to stake pool described by smart contract
    Owner of server running consensus client takes a small cut of profits, remaining sent to stakers

Uniswap Defi
    Implement uniswap paper(s)

******************Use eth_utils to manually sign transactions***********
Bypass the geth accounts stuff, and understand what metamask is doing behind the scenes
    probably a good idea to undestand (at least understand usage) of one of the cryptographic primitives

    digital signatures in ethereum - does it use ECDSA?

****************************Oracles**************************************

******************************Defi**************************************

****************************Test Nets***********************************
